# docker_setup.yml
---
- hosts: localhost
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == "Debian"

    - name: Install required packages
      yum:
        name: 
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker's official repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker
      yum:
        name: docker-ce
        state: present
      when: ansible_os_family == "RedHat"

    - name: Start and enable Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create Dockerfile directory
      file:
        path: ~/docker_project
        state: directory

    - name: Copy Dockerfile to the control node
      copy:
        src: Dockerfile
        dest: ~/docker_project/Dockerfile

    - name: Copy HTML files to the control node
      copy:
        src: html/
        dest: ~/docker_project/html/

    - name: Build Docker image
      command: docker build -t my-nginx-image ~/docker_project
      args:
        chdir: ~/docker_project

    - name: Run Docker container
      command: docker run -d -p 80:80 --name my-nginx-container my-nginx-image
      args:
        chdir: ~/docker_project
